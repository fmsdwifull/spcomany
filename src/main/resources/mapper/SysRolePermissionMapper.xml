<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.companyframe.mapper.SysRolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.feng.companyframe.bean.SysRolePermission">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_id" jdbcType="VARCHAR" property="permissionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, permission_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_permission
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role_permission
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.feng.companyframe.bean.SysRolePermission">
    insert into sys_role_permission (id, role_id, permission_id, 
      create_time)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{permissionId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.feng.companyframe.bean.SysRolePermission">
    insert into sys_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.feng.companyframe.bean.SysRolePermission">
    update sys_role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.feng.companyframe.bean.SysRolePermission">
    update sys_role_permission
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--批量插入 角色和菜单权限关联数据-->
  <insert id="batchInsertRolePermission" parameterType="com.feng.companyframe.bean.SysRolePermission" >
    insert into sys_role_permission
    (
    id,
    role_id,
    permission_id,
    create_time
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      #{item.id},
      #{item.roleId},
      #{item.permissionId},
      #{item.createTime}
      )
    </foreach>
  </insert>

  <!--@Description: 根据菜单权限id 获取 关联的角色id集合 -->
  <select id="getRoleIdsByPermissionId" parameterType="String" resultType="String">
    select role_id
    from sys_role_permission
    <where>
      permission_id = #{permissionId}
    </where>
  </select>

  <!--@Description: 通过权限id 删除关联的角色-->
  <delete id="removeByPermissionId" parameterType="String" >
    delete
    from sys_role_permission
    where permission_id = #{permissionId}
  </delete>

  <!--@Description: 根据角色id获取该角色关联的菜单权限id集合-->
  <select id="getPermissionIdsByRoleId" parameterType="java.lang.String" resultType="java.lang.String">
    select permission_id
    from sys_role_permission
    <where>
      role_id = #{roleId}
    </where>
  </select>


  <!--@Description: 根据 角色id 删除角色和菜单权限关联表相关数据-->
  <delete id="removeByRoleId" parameterType="String">
    delete
    from sys_role_permission
    <where>
      role_id = #{roleId}
    </where>
  </delete>


  <!--@Description: 根据 角色id 删除角色和菜单权限关联表相关数据-->
  <select id="getPermissionIdsByRoleIds"  parameterType="String"  resultType="java.lang.String">
    select permission_id
    from sys_role_permission
    <where>
      role_id in
      <foreach collection="list" item="item" open="(" close=")" separator=",">
        #{item}
      </foreach>
    </where>
  </select>

</mapper>